{"version":3,"sources":["component/vievs/Moviedetailspage/Reviews.js"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchAPI","then","res","results","length","map","author","content","id"],"mappings":"sOAGe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,IAAsBL,GAASM,MAAK,SAAAC,GAClCJ,EAAWI,EAAIC,cAEhB,CAACR,IAGF,mCACE,8BACsB,IAAnBE,EAAQO,OACP,6BACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,+BACE,iCACE,yCADF,IACmBF,KAEnB,4BAAIC,MAJGC,QASb","file":"static/js/Reviews.d1aca6c0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport * as fetchAPI from '../../services/Film-api';\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAPI.fetchReviews(movieId).then(res => {\r\n      setReviews(res.results);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {reviews.length !== 0 ? (\r\n          <ul>\r\n            {reviews.map(({ author, content, id }) => (\r\n              <li key={id}>\r\n                <span>\r\n                  <b>Author: </b> {author}\r\n                </span>\r\n                <p>{content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We do not have any reviews for this movie.</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}